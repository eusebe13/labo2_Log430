name: CI/CD FastAPI + React

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: eusebe13/lab_2_more_log430
  DOCKER_TAG: latest

jobs:
  test-backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports: [5432:5432]
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: app_db
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgresql://user:password@localhost:5432/app_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install backend dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run backend tests 
        run: |
          cd backend
          pytest

  lint-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install ruff
        run: pip install ruff

      - name: Run backend linting
        run: |
          cd backend
          ruff check .

  build-and-push:
    runs-on: ubuntu-latest
    needs: [test-backend, lint-backend]
    steps:
      - name: Cloner le repo
        uses: actions/checkout@v3

      - name: Connexion Ã  Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build et push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: docker.io/${{ secrets.DOCKER_USERNAME }}/lab_2_more_log430:latest_${{ secrets.DOCKER_USERNAME }}
    